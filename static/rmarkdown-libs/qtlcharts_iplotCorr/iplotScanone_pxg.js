// Generated by CoffeeScript 1.10.0
var iplotScanone_pxg;

iplotScanone_pxg = function(widgetdiv, lod_data, pxg_data, chartOpts) {
  var altrectcolor, chartdivid, chrGap, eff_axispos, eff_nyticks, eff_pointcolor, eff_pointcolorhilit, eff_pointsize, eff_pointstroke, eff_rotate_ylab, eff_titlepos, eff_xlab, eff_yNA, eff_ylab, eff_ylim, eff_yticks, g_lod, height, lod_axispos, lod_linecolor, lod_linewidth, lod_nyticks, lod_pointcolor, lod_pointsize, lod_pointstroke, lod_rotate_ylab, lod_title, lod_titlepos, lod_xlab, lod_ylab, lod_ylim, lod_yticks, margin, markers, mylodchart, mypxgchart, plotPXG, rectcolor, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref15, ref16, ref17, ref18, ref19, ref2, ref20, ref21, ref22, ref23, ref24, ref25, ref26, ref27, ref28, ref29, ref3, ref30, ref31, ref32, ref33, ref34, ref35, ref36, ref37, ref38, ref39, ref4, ref40, ref41, ref42, ref43, ref44, ref5, ref6, ref7, ref8, ref9, svg, widgetdivid, width, wleft, wright, x, xjitter;
  markers = (function() {
    var results;
    results = [];
    for (x in pxg_data.chrByMarkers) {
      results.push(x);
    }
    return results;
  })();
  height = (ref = chartOpts != null ? chartOpts.height : void 0) != null ? ref : 450;
  width = (ref1 = chartOpts != null ? chartOpts.width : void 0) != null ? ref1 : 1200;
  wleft = (ref2 = chartOpts != null ? chartOpts.wleft : void 0) != null ? ref2 : width * 0.7;
  margin = (ref3 = chartOpts != null ? chartOpts.margin : void 0) != null ? ref3 : {
    left: 60,
    top: 40,
    right: 40,
    bottom: 40,
    inner: 5
  };
  lod_axispos = (ref4 = (ref5 = chartOpts != null ? chartOpts.lod_axispos : void 0) != null ? ref5 : chartOpts != null ? chartOpts.axispos : void 0) != null ? ref4 : {
    xtitle: 25,
    ytitle: 30,
    xlabel: 5,
    ylabel: 5
  };
  lod_titlepos = (ref6 = (ref7 = chartOpts != null ? chartOpts.lod_titlepos : void 0) != null ? ref7 : chartOpts != null ? chartOpts.titlepos : void 0) != null ? ref6 : 20;
  chrGap = (ref8 = chartOpts != null ? chartOpts.chrGap : void 0) != null ? ref8 : 6;
  rectcolor = (ref9 = chartOpts != null ? chartOpts.rectcolor : void 0) != null ? ref9 : "#E6E6E6";
  altrectcolor = (ref10 = chartOpts != null ? chartOpts.altrectcolor : void 0) != null ? ref10 : "#C8C8C8";
  lod_ylim = (ref11 = chartOpts != null ? chartOpts.lod_ylim : void 0) != null ? ref11 : null;
  lod_nyticks = (ref12 = chartOpts != null ? chartOpts.lod_nyticks : void 0) != null ? ref12 : 5;
  lod_yticks = (ref13 = chartOpts != null ? chartOpts.lod_yticks : void 0) != null ? ref13 : null;
  lod_linecolor = (ref14 = chartOpts != null ? chartOpts.lod_linecolor : void 0) != null ? ref14 : "darkslateblue";
  lod_linewidth = (ref15 = chartOpts != null ? chartOpts.lod_linewidth : void 0) != null ? ref15 : 2;
  lod_pointcolor = (ref16 = chartOpts != null ? chartOpts.lod_pointcolor : void 0) != null ? ref16 : "#E9CFEC";
  lod_pointsize = (ref17 = chartOpts != null ? chartOpts.lod_pointsize : void 0) != null ? ref17 : 0;
  lod_pointstroke = (ref18 = chartOpts != null ? chartOpts.lod_pointstroke : void 0) != null ? ref18 : "black";
  lod_title = (ref19 = chartOpts != null ? chartOpts.lod_title : void 0) != null ? ref19 : "";
  lod_xlab = (ref20 = chartOpts != null ? chartOpts.lod_xlab : void 0) != null ? ref20 : "Chromosome";
  lod_ylab = (ref21 = chartOpts != null ? chartOpts.lod_ylab : void 0) != null ? ref21 : "LOD score";
  lod_rotate_ylab = (ref22 = chartOpts != null ? chartOpts.lod_rotate_ylab : void 0) != null ? ref22 : null;
  eff_pointcolor = (ref23 = (ref24 = chartOpts != null ? chartOpts.eff_pointcolor : void 0) != null ? ref24 : chartOpts != null ? chartOpts.pointcolor : void 0) != null ? ref23 : "slateblue";
  eff_pointcolorhilit = (ref25 = (ref26 = chartOpts != null ? chartOpts.eff_pointcolorhilit : void 0) != null ? ref26 : chartOpts != null ? chartOpts.pointcolorhilit : void 0) != null ? ref25 : "Orchid";
  eff_pointstroke = (ref27 = (ref28 = chartOpts != null ? chartOpts.eff_pointstroke : void 0) != null ? ref28 : chartOpts != null ? chartOpts.pointstroke : void 0) != null ? ref27 : "black";
  eff_pointsize = (ref29 = (ref30 = chartOpts != null ? chartOpts.eff_pointsize : void 0) != null ? ref30 : chartOpts != null ? chartOpts.pointsize : void 0) != null ? ref29 : 3;
  eff_ylim = (ref31 = chartOpts != null ? chartOpts.eff_ylim : void 0) != null ? ref31 : null;
  eff_nyticks = (ref32 = chartOpts != null ? chartOpts.eff_nyticks : void 0) != null ? ref32 : 5;
  eff_yticks = (ref33 = chartOpts != null ? chartOpts.eff_yticks : void 0) != null ? ref33 : null;
  eff_xlab = (ref34 = chartOpts != null ? chartOpts.eff_xlab : void 0) != null ? ref34 : "Genotype";
  eff_ylab = (ref35 = chartOpts != null ? chartOpts.eff_ylab : void 0) != null ? ref35 : "Phenotype";
  eff_rotate_ylab = (ref36 = chartOpts != null ? chartOpts.eff_rotate_ylab : void 0) != null ? ref36 : null;
  xjitter = (ref37 = (ref38 = chartOpts != null ? chartOpts.xjitter : void 0) != null ? ref38 : chartOpts != null ? chartOpts.eff_xjitter : void 0) != null ? ref37 : null;
  eff_axispos = (ref39 = (ref40 = chartOpts != null ? chartOpts.eff_axispos : void 0) != null ? ref40 : chartOpts != null ? chartOpts.axispos : void 0) != null ? ref39 : {
    xtitle: 25,
    ytitle: 30,
    xlabel: 5,
    ylabel: 5
  };
  eff_titlepos = (ref41 = (ref42 = chartOpts != null ? chartOpts.eff_titlepos : void 0) != null ? ref42 : chartOpts != null ? chartOpts.titlepos : void 0) != null ? ref41 : 20;
  eff_yNA = (ref43 = chartOpts != null ? chartOpts.eff_yNA : void 0) != null ? ref43 : {
    handle: true,
    force: false,
    width: 15,
    gap: 10
  };
  chartdivid = (ref44 = chartOpts != null ? chartOpts.chartdivid : void 0) != null ? ref44 : 'chart';
  widgetdivid = d3.select(widgetdiv).attr('id');
  wright = width - wleft;
  mylodchart = d3panels.lodchart({
    height: height,
    width: wleft,
    margin: margin,
    axispos: lod_axispos,
    titlepos: lod_titlepos,
    chrGap: chrGap,
    altrectcolor: altrectcolor,
    rectcolor: rectcolor,
    ylim: lod_ylim,
    nyticks: lod_nyticks,
    yticks: lod_yticks,
    linecolor: lod_linecolor,
    linewidth: lod_linewidth,
    pointcolor: lod_pointcolor,
    pointsize: lod_pointsize,
    pointstroke: lod_pointstroke,
    title: lod_title,
    xlab: lod_xlab,
    ylab: lod_ylab,
    rotate_ylab: lod_rotate_ylab,
    tipclass: widgetdivid
  });
  svg = d3.select(widgetdiv).select("svg");
  g_lod = svg.append("g").attr("id", "lodchart");
  mylodchart(g_lod, lod_data);
  mypxgchart = null;
  plotPXG = function(markername, markerindex) {
    var chr, chrtype, g, g_pxg, gabs, genonames, inferred, j, ref45, results;
    if (mypxgchart != null) {
      mypxgchart.remove();
    }
    g = pxg_data.geno[markerindex];
    gabs = (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = g.length; j < len; j++) {
        x = g[j];
        results.push(Math.abs(x));
      }
      return results;
    })();
    inferred = (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = g.length; j < len; j++) {
        x = g[j];
        results.push(x < 0);
      }
      return results;
    })();
    chr = pxg_data.chrByMarkers[markername];
    chrtype = pxg_data.chrtype[chr];
    genonames = pxg_data.genonames[chrtype];
    mypxgchart = d3panels.dotchart({
      height: height,
      width: wright,
      margin: margin,
      xcategories: (function() {
        results = [];
        for (var j = 1, ref45 = genonames.length; 1 <= ref45 ? j <= ref45 : j >= ref45; 1 <= ref45 ? j++ : j--){ results.push(j); }
        return results;
      }).apply(this),
      xcatlabels: genonames,
      dataByInd: false,
      title: markername,
      axispos: eff_axispos,
      titlepos: eff_titlepos,
      xlab: eff_xlab,
      ylab: eff_ylab,
      rotate_ylab: eff_rotate_ylab,
      ylim: eff_ylim,
      nyticks: eff_nyticks,
      yticks: eff_yticks,
      pointcolor: eff_pointcolor,
      pointstroke: eff_pointstroke,
      pointsize: eff_pointsize,
      rectcolor: rectcolor,
      xjitter: xjitter,
      yNA: eff_yNA,
      tipclass: widgetdivid
    });
    g_pxg = svg.append("g").attr("id", "pxgchart").attr("transform", "translate(" + wleft + ",0)");
    mypxgchart(g_pxg, {
      x: gabs,
      y: pxg_data.pheno,
      indID: pxg_data.indID
    });
    return mypxgchart.points().attr("fill", function(d, i) {
      if (inferred[i]) {
        return eff_pointcolorhilit;
      }
      return eff_pointcolor;
    });
  };
  return mylodchart.markerSelect().on("click", function(d, i) {
    return plotPXG(markers[i], i);
  });
};
